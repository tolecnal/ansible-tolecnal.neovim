---
# Install Bob and Neovim for a specific user

- name: Set user home directory
  ansible.builtin.set_fact:
    user_home: "{{ '/Users/' + target_user if ansible_os_family == 'Darwin' else '/home/' + target_user if target_user != 'root' else '/root' }}"

- name: Ensure Rust is installed, required by bob for user {{ target_user }}
  ansible.builtin.include_tasks: rust_user.yml
  when: bob_install_method == "cargo"

- name: Install Bob via cargo for {{ target_user }}
  ansible.builtin.command: cargo install --git https://github.com/MordechaiHadad/bob.git
  environment:
    PATH: "{{ user_home }}/.cargo/bin:{{ ansible_env.PATH }}"
    HOME: "{{ user_home }}"
  become: true
  become_user: "{{ target_user }}"
  when: bob_install_method == "cargo"
  register: bob_install
  changed_when: "'Installing' in bob_install.stderr or 'Compiling' in bob_install.stderr"

- name: Install Bob via binary (global installation)
  block:
    - name: Detect system architecture
      ansible.builtin.set_fact:
        bob_arch: "{{ 'x86_64' if ansible_architecture == 'x86_64' else 'aarch64' }}"

    - name: Download Bob binary
      ansible.builtin.get_url:
        url: "https://github.com/MordechaiHadad/bob/releases/latest/download/bob-linux-{{ bob_arch }}"
        dest: /tmp/bob
        mode: "0755"

    - name: Move Bob to /usr/local/bin
      ansible.builtin.copy:
        src: /tmp/bob
        dest: /usr/local/bin/bob
        mode: "0755"
        remote_src: true
      become: true

    - name: Clean up downloaded binary
      ansible.builtin.file:
        path: /tmp/bob
        state: absent
  when: bob_install_method == "binary"
  run_once: true

- name: Ensure Bob directory exists for {{ target_user }}
  ansible.builtin.file:
    path: "{{ user_home }}/.local/share/bob"
    state: directory
    mode: "0755"
    owner: "{{ target_user }}"
    group: "{{ target_user }}"
  become: true

- name: Add Bob to PATH in .bashrc for {{ target_user }}
  ansible.builtin.lineinfile:
    path: "{{ user_home }}/.bashrc"
    line: 'export PATH="$HOME/.local/share/bob/nvim-bin:$PATH"'
    create: true
    state: present
    owner: "{{ target_user }}"
    group: "{{ target_user }}"
    mode: "0660"
  become: true

- name: Add Bob to PATH in .zshrc if zsh is installed for user  {{ target_user }}
  ansible.builtin.lineinfile:
    path: "{{ user_home }}/.zshrc"
    line: 'export PATH="$HOME/.local/share/bob/nvim-bin:$PATH"'
    create: true
    state: present
    owner: "{{ target_user }}"
    group: "{{ target_user }}"
    mode: "00660"
  become: true
  ignore_errors: true

- name: Install Neovim using Bob for {{ target_user }}
  ansible.builtin.command: bob install {{ neovim_version }}
  environment:
    PATH: "{{ user_home }}/.cargo/bin:{{ user_home }}/.local/share/bob/nvim-bin:/usr/local/bin:{{ ansible_env.PATH }}"
    HOME: "{{ user_home }}"
  become: true
  become_user: "{{ target_user }}"
  register: bob_nvim_install
  changed_when: "'Downloaded' in bob_nvim_install.stdout or 'Installing' in bob_nvim_install.stdout"

- name: Set Neovim version as default for {{ target_user }}
  ansible.builtin.command: bob use {{ neovim_version }}
  environment:
    PATH: "{{ user_home }}/.cargo/bin:{{ user_home }}/.local/share/bob/nvim-bin:/usr/local/bin:{{ ansible_env.PATH }}"
    HOME: "{{ user_home }}"
  become: true
  become_user: "{{ target_user }}"
  changed_when: false

- name: Verify Neovim installation for {{ target_user }}
  ansible.builtin.command: nvim --version
  environment:
    PATH: "{{ user_home }}/.local/share/bob/nvim-bin:{{ ansible_env.PATH }}"
    HOME: "{{ user_home }}"
  become: true
  become_user: "{{ target_user }}"
  register: nvim_version_check
  changed_when: false

- name: Display installed Neovim version for {{ target_user }}
  ansible.builtin.debug:
    msg: "Neovim version installed for {{ target_user }}: {{ nvim_version_check.stdout_lines[0] }}"
